name: tests

on:
  workflow_call:
    secrets:
      DOCKER_HUB_ACCESS_TOKEN:
        required: false
      DOCKER_HUB_USERNAME:
        required: false

  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: { }

permissions: read-all

jobs:
  build_browser_tests:
    runs-on: ubuntu-latest
    steps:
    - name: check out ${{ env.GITHUB_REF }}
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build browser testing container
      uses: docker/build-push-action@v3
      with:
        context: browser-test/
        file: browser-test/playwright.Dockerfile
        load: true
        push: false
        tags: civiform-browser-test:latest
        cache-from: |
          civiform/civiform-browser-test:latest
          type=gha
        outputs: type=docker,dest=/tmp/civiform-browser-test.tar
    - name: Upload civiform-browser-test artifact
      uses: actions/upload-artifact@v3
      with:
        name: civiform-browser-test
        path: /tmp/civiform-browser-test.tar
        retention-days: 1
        if-no-files-found: error


  build_civifom-dev:
    runs-on: ubuntu-latest
    steps:
    - name: check out ${{ env.GITHUB_REF }}
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build test app container
      uses: docker/build-push-action@v3
      with:
        context: ./
        load: true
        push: false
        tags: civiform
        cache-from: |
          civiform/civiform-dev:latest
          type=gha
        outputs: type=docker,dest=/tmp/civiform-dev.tar
    - name: Upload civiform-dev artifact
      uses: actions/upload-artifact@v3
      with:
        name: civiform-dev
        path: /tmp/civiform-dev.tar
        retention-days: 1
        if-no-files-found: error

  run_junit_tests:
    needs:  [build_civifom-dev]
    runs-on: ubuntu-latest
    steps:
    - name: check out ${{ env.GITHUB_REF }}
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build test container
      uses: docker/build-push-action@v3
      with:
        context: ./
        load: true
        push: false
        tags: civiform-dev
        cache-from: |
          civiform/civiform-dev:latest
          type=gha
        cache-to: type=gha,mode=max
    - name: Run tests
      run: USE_LOCAL_CIVIFORM=true bin/run-test-ci

  run_browser_tests:
    needs:  [build_civifom-dev,build_browser_tests]
    strategy:
      matrix:
        batch_number: [1, 2, 3, 4]
        include:
        - env: azure
          emulator: Localstack
        - env: aws
          emulator: Azurite

    runs-on: ubuntu-latest
    steps:
    - name: check out ${{ env.GITHUB_REF }}
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Download civiform-dev artifact
      uses: actions/download-artifact@v3
      with:
        name: civiform-dev
    - name: Load civiform-dev image
      run: |
        docker load --input /tmp/civiform-dev.tar
        docker image ls -a
    - name: Download civiform-browser-test artifact
      uses: actions/download-artifact@v3
      with:
        name: civiform-browser-test
    - name: Load civiform-browser-test image
      run: |
        docker load --input /tmp/civiform-browser-test.tar
        docker image ls -a
    - name: Bring up test env with ${{ matrix.emulator }}
      run: bin/run-browser-test-env --${{ matrix.env}} --ci
    - name: Run browser tests with ${{ matrix.emulator }}
      run: bin/run-browser-tests-ci-batch ${{ matrix.batch_number }}
    - name: Print logs on failure
      if: failure()
      run: cat .dockerlogs

  test_prod:
    runs-on: ubuntu-latest
    steps:
    - name: check out ${{ env.GITHUB_REF }}
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build prod container
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: prod.Dockerfile
        load: true
        push: false
        tags: civiform:prod
        cache-from: |
          civiform/civiform:latest
    - name: Start the stack
      env:
        SECRET_KEY: notarealsecret
      run: docker compose -f test-support/prod-simulator-compose.yml up -d
    - name: Test
      # Confirm that we get a response on port 9000.
      run: while ! docker run --network host appropriate/curl -v -s --retry-max-time 180 --retry-connrefused http://localhost:9000/ ; do sleep 5; done
      timeout-minutes: 3
